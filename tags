!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AddArticle	api/cudr.go	/^func AddArticle(c *gin.Context) {$/;"	f
AddArticle	service/articlemanage.go	/^func (service *ArticleAddSservice) AddArticle() serializer.Response {$/;"	f
Article	model/article.go	/^type Article struct {$/;"	t
Article	serializer/article.go	/^type Article struct {$/;"	t
ArticleAddSservice	service/articlemanage.go	/^type ArticleAddSservice struct {$/;"	t
ArticleIdKey	model/rediskey.go	/^func ArticleIdKey(articleid string) string {$/;"	f
ArticleList	api/cudr.go	/^func ArticleList(c *gin.Context) {$/;"	f
ArticleList	service/articlemanage.go	/^func (service *ArticleListservice) ArticleList() serializer.Response {$/;"	f
ArticleListservice	service/articlemanage.go	/^type ArticleListservice struct {$/;"	t
ArticleSservice	service/articlemanage.go	/^type ArticleSservice struct {$/;"	t
ArticleTagsKey	model/rediskey.go	/^func ArticleTagsKey(articleid string) string {$/;"	f
AuthorArticlesKey	model/rediskey.go	/^func AuthorArticlesKey(authorid string) string {$/;"	f
BuildArticle	serializer/article.go	/^func BuildArticle(article model.Article) Article {$/;"	f
BuildArticleList	serializer/article.go	/^func BuildArticleList(articles []model.Article) []Article {$/;"	f
BuildArticleListResponse	serializer/article.go	/^func BuildArticleListResponse(articles []model.Article) Response {$/;"	f
BuildArticleResponse	serializer/article.go	/^func BuildArticleResponse(article model.Article) Response {$/;"	f
BuildResponse	serializer/common.go	/^func BuildResponse(msg string) Response {$/;"	f
Del	model/del.go	/^func Del() {$/;"	f
DeleteArticle	api/cudr.go	/^func DeleteArticle(c *gin.Context) {$/;"	f
DeleteArticle	service/articlemanage.go	/^func (service *ArticleSservice) DeleteArticle() serializer.Response {$/;"	f
Err	serializer/common.go	/^func Err(errtype int, err error) Response {$/;"	f
GetArticleIDKey	model/rediskey.go	/^func GetArticleIDKey() string {$/;"	f
GetSort	model/rediskey.go	/^func GetSort(key string, returnId bool, strs ...string) []string {$/;"	f
Init	model/del.go	/^func Init() {$/;"	f
JsonMapParam	gintest/test.go	/^func JsonMapParam(param map[string]interface{}) (io.Reader, error) {$/;"	f
JsonToMap	gintest/test.go	/^func JsonToMap(str []byte) (map[string]interface{}, error) {$/;"	f
New	router/router.go	/^func New() *gin.Engine {$/;"	f
NewRequest	gintest/test.go	/^func NewRequest(method, url, bodytype string, body map[string]interface{}) (*http.Request, error) {$/;"	f
NewTest	gintest/test.go	/^func NewTest() *gin.Engine {$/;"	f
NoErr	serializer/common.go	/^	NoErr = iota$/;"	c
ParamErr	serializer/common.go	/^	ParamErr$/;"	c
ParamToStr	gintest/test.go	/^func ParamToStr(mp map[string]interface{}) string {$/;"	f
Ping	api/cudr.go	/^func Ping(c *gin.Context) {$/;"	f
RedisErr	serializer/common.go	/^	RedisErr$/;"	c
RedisKeyNull	model/del.go	/^const RedisKeyNull = redis.Nil \/\/结果为空$/;"	c
Redisdb	model/del.go	/^var Redisdb *redis.Client$/;"	v
Response	serializer/common.go	/^type Response struct {$/;"	t
ShortTime	tool/common.go	/^func ShortTime() string {$/;"	f
ShowArticle	api/cudr.go	/^func ShowArticle(c *gin.Context) {$/;"	f
ShowArticle	service/articlemanage.go	/^func (service *ArticleSservice) ShowArticle() serializer.Response {$/;"	f
SliceToString	tool/common.go	/^func SliceToString(str []string) string {$/;"	f
SortArgs	model/rediskey.go	/^func SortArgs(by string, offset, count int64, get []string, order string, alpha bool) *redis.Sort {$/;"	f
StartHandler	gintest/test.go	/^func StartHandler(router *gin.Engine, req *http.Request) (string, error) {$/;"	f
StrSplicing	tool/common.go	/^func StrSplicing(str ...string) string {$/;"	f
StrconvErr	serializer/common.go	/^	StrconvErr$/;"	c
TagKey	model/rediskey.go	/^func TagKey(tag string) string {$/;"	f
TestArticleAddRoute	router_test.go	/^func TestArticleAddRoute(t *testing.T) {$/;"	f
TestArticleShowRoute	router_test.go	/^func TestArticleShowRoute(t *testing.T) {$/;"	f
TestCase	gintest/test.go	/^type TestCase struct {$/;"	t
TestCases	gintest/test.go	/^type TestCases []TestCase$/;"	t
UpdateArticle	api/cudr.go	/^func UpdateArticle(c *gin.Context) {$/;"	f
UpdateArticle	service/articlemanage.go	/^func (service *ArticleSservice) UpdateArticle() serializer.Response {$/;"	f
api	api/cudr.go	/^package api$/;"	p
gintest	gintest/test.go	/^package gintest$/;"	p
main	main.go	/^func main() {$/;"	f
main	main.go	/^package main$/;"	p
main	router_test.go	/^package main$/;"	p
model	model/article.go	/^package model$/;"	p
model	model/del.go	/^package model$/;"	p
model	model/rediskey.go	/^package model$/;"	p
router	router/router.go	/^package router$/;"	p
serializer	serializer/article.go	/^package serializer$/;"	p
serializer	serializer/common.go	/^package serializer$/;"	p
service	service/articlemanage.go	/^package service$/;"	p
tool	tool/common.go	/^package tool$/;"	p
